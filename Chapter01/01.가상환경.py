print("hello code")

# 프로그래밍이란?
# - 프로그램을 만드는일
# - 만드는 이유 : 문제 해결을 위해서
# - EX) 전화 주문 시스템 -> 온라인 판매 시스템

# 파이썬 변수 이름 규칙
# - 데이터를 표현할 수 있는 이름
# - 문자부터 시작
# - 대소문자 구분
# - _로 시작할 수 있다
# - 예약어 사용 불가능

# 연산의 종류
# - 대입연산
# - 산술연산
# - 비교연산
# - 논리 연산

# 파이썬 연산자
# + 더하기
# - 뺴기
# * 곱하기
# / 나누기
# // 몫
# % 나머지
# ** 제곱

# 복합 할당 연산자
# +=
# -=
# *=
# /=

# 비교연산자
# > 크다
# < 작다
# >= 크거나 같다
# <= 작거나 같다
# == 같다
# != 다르다

# 논리연산자
# A and B
# A or B
# not A

# 멤버십 연산
# in 왼쪽이 오른쪽에 포함되어 있다
# not 인 포함되어 있지 않다

# 데이터 입력 받기
# input(): 입력함수
# 사용자로부터 데이터를 입력받음
# input("입력할 시 출력할 메시지")

# 자료형 변환
# 숫자형으로 변환
# int(데이터)
# 실수형 변환
# float(데이터)
# 문자형 변환
# str(데이터)
# 리스트 변환
# list(데이터)

# 조건문
# 조건에 따라 실행할 명령 변경
# if 데이터 1 == 데이터 2:
#   참일때 실행할 구문
# else:
#   거짓일 때 실행할 구문
# elif:
#   추가 조건일떄

# 리스트형 (배열)
# 선언 : test['sample']
# 데이터 제어
# 데이터 추가    리스트.append(data)
# 데이터 할당    리스트[index] = data
# 데이터 삭제    del 리스트[index]
# 슬라이싱      리스트[시작: 끝+1] 특정 리스트의 일정 부분 추출 시작인덱스 ~ 끝인덱스까지
# ex) b = [3,4,2,1]     b[1 : 3] == [4,2]
# b[:] 전체 출력
# b[:3] 2까지 출력
# b[1:] 1이후 모두 출력
# 리스트 길이    len(리스트)
# 리스트 정령    리스트.sort()
# 기본값 오름차 순, 내림차 순으로 하려면 파리미터에 reverse=True

# 조건문
# for 사용법
# for 변수 in 시퀀스 자료:
# range 명령어
# range(10)     0~9까지 숫자를 포함하는 range 객체를 만들어 준다.
# range(1, 10, 2) :    2칸씩 건너뛰어서 결과는 1 3 5 7 9

# while 사용법
# while 조건식:
#   반복할 명령
#   증감식
# 무한 루프에 빠지지 않기 위해 break를 사용

# 함수의 사용 이유
# 재사용성
# 유지보수성
# 가독성